---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-taskmanager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.taskmanager.replicas }}
  selector:
    matchLabels:
      app: flink
      component: {{ .Release.Name }}-taskmanager
  template:
    metadata:
      labels:
        app: flink
        component: {{ .Release.Name }}-taskmanager
    spec:
      volumes:
      - name: flink-config-volume
        configMap:
          name: {{ .Release.Name }}-config
          items:
          - key: flink-conf
            path: flink-conf.yaml
          - key: log4j_console_properties
            path: log4j-console.properties
      #imagePullSecrets:
      #- name: "{{ .Values.imagepullsecrets }}"
      containers:
      - name: {{ .Release.Name }}-taskmanager
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        #resources:
        #  requests:
        #    cpu: "{{ .Values.taskmanager.cpu_requests }}"
        workingDir: {{ .Values.taskmanager.flink_work_dir }}
        command: ["/opt/flink/bin/taskmanager.sh"]
        args: ["start-foreground",         
{{- if eq .Values.checkpoint_store_type "azure" }}
          "-Dfs.azure.account.key.{{ .Values.cloud_storage_key }}.blob.core.windows.net={{ .Values.cloud_storage_secret }}",
{{- end }}
{{- if eq .Values.checkpoint_store_type "s3" }}
          "-Ds3.access-key={{ .Values.cloud_storage_key }}",
          "-Ds3.secret-key={{ .Values.cloud_storage_secret }}",
          "-Ds3.endpoint={{ .Values.cloud_storage_endpoint }}",
          "-Ds3.path.style.access={{ .Values.cloud_storage_path_style_access }}",
{{- end }}
{{- if eq .Values.checkpoint_store_type "gcloud" }}
          "-Dfs.gs.auth.client.id={{ .Values.cloud_storage_key }}",
          "-Dfs.gs.auth.client.secret={{ .Values.cloud_storage_secret }}",
          "-Dfs.gs.project.id={{ .Values.cloud_storage_project_id }}",
{{- end }}
          "-Dweb.submit.enable=false",
          "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
          "-Dmetrics.reporter.prom.host={{ .Release.Name }}-taskmanager",
          "-Dmetrics.reporter.prom.port=9251-9260",
          "-Djobmanager.rpc.address={{ .Release.Name }}-jobmanager",
          "-Dtaskmanager.rpc.port={{ .Values.taskmanager.rpc_port }}"]
        ports:
        - containerPort: {{ .Values.taskmanager.rpc_port }}
          name: rpc
        {{- if .Values.healthcheck }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: flink-config-volume
          mountPath: /opt/flink/conf/flink-conf.yaml
          subPath: flink-conf.yaml
        - name: flink-config-volume
          mountPath: /opt/flink/conf/log4j-console.properties
          subPath: log4j-console.properties
